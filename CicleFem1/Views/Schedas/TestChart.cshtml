@model CicleFem1.Models.Scheda

@{
    ViewBag.Title = "Details";
}

<h2>Dati scheda N.@Model.Numero</h2>

<div>
    <h4>
        <span class="label label-info">
            dal @Html.DisplayFor(model => model.DataI)
            al @Html.DisplayFor(model => model.DataF)
        </span>
    </h4>
</div>

<div>

    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#grafico" aria-controls="grafico" role="tab" data-toggle="tab">Grafico</a></li>
        <li role="presentation"><a href="#dati" aria-controls="dati" role="tab" data-toggle="tab">Dati</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="grafico">
            <canvas id="myChart" >
            </canvas>
            @*Tabelle dati sotto il grafico*@
            <table class="table table-bordered" style="font-size:0.7em">
                <tr>
                    @foreach (var item in Model.DettaglioScheda)
                    {
                        var di = 100 / Model.NumeroG;
                        var larg = di + "%";
                        <td class="text-center" style="@larg">
                            @Model.NumeroG<br />
                            @item.Giorno<br />
                            @larg
                        </td>

                    }
                </tr>
            </table>
        </div>
        <div role="tabpanel" class="tab-pane" id="dati">
            <div >
                <table class="table table-hover">
                    <thead>

                        <tr>
                            <th>
                                Data ora rilevamento
                            </th>
                            <th>
                                Giorno
                            </th>
                            <th>
                                Temperatura
                            </th>
                            <th>
                                Perdite ematiche
                            </th>
                            <th colspan="2">
                                Muco Q.tà
                            </th>
                            <th>
                                Coito
                            </th>
                            <th colspan="4">
                                Utero<br />
                                Con. Inc. Ape. Pos.
                            </th>
                        </tr>
                    </thead>

                    @foreach (var item in Model.DettaglioScheda)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Giorno)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Temperatura)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Ematic)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Muco)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MucoC)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Coito)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UteCon)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UteInc)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UteApe)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UtePos)
                            </td>
                           <td>
                                @Html.ActionLink("Edit", "Edit", "DettaglioSchedas", new { id = item.DettaglioScheda_Id, scheda = item.Scheda_Id }, null) |

                            </td>
                        </tr>

                    }
                </table>
            </div>

        </div>
    </div>

</div>
<div>
    <button type="button" id="myButton" class="btn btn-primary">
        Loading state
    </button>    
    <label id="dataP" />
</div>


@section Scripts{
    <script type="text/javascript">

    var result = @Html.Raw(ViewBag.DataPoints);
    var label = [];
        var temp = [];
        var muco = [];
        var ematic = [];
        var data = [];
    for (var i = 0; i < result.length; i++) {
        label.push(result[i].g);
        temp.push(result[i].t);
        muco.push(result[i].m);
        ematic.push(result[i].e);
        data.push(result[i].d);
    }
        $('#myButton').click(function () {
            $('#dataP').text(data);
        });

        // Define a plugin to provide data labels
        Chart.plugins.register({
            afterDatasetsDraw: function (chart, easing) {
                // To only draw at the end of animation, check for easing === 1
                var ctx = chart.ctx;

                chart.data.datasets.forEach(function (dataset, i) {
                    var meta = chart.getDatasetMeta(i);
                    if (!meta.hidden) {
                        meta.data.forEach(function (element, index) {
                            // Draw the text in black, with the specified font
                            ctx.fillStyle = 'rgb(0, 0, 0)';

                            var fontSize = 16;
                            var fontStyle = 'normal';
                            var fontFamily = 'Helvetica Neue';
                            ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);

                            // Just naively convert to string for now
                            var dataString = dataset.data[index].toString();

                            // Make sure alignment settings are correct
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'middle';

                            var padding = 5;
                            var position = element.tooltipPosition();
                            ctx.fillText(dataString, position.x, position.y - (fontSize / 2) - padding);
                        });
                    }
                });
            }
        });


        //Grafico temperature
    var ctx = document.getElementById("myChart");
        let myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: data,
                datasets: [
                    {
                        label: 'Temperatura',
                        yAxisID: "1",
                        data: temp,
                        lineTension: 0,
                        fill: false,
                    },
                    {
                        label: 'Mestruazioni',
                        yAxisID: "A",
                        data: ematic,
                        backgroundColor: 'rgb(255,0,0)',
                    },
                   {
                        label: 'Muco',
                       data: muco,
                        backgroundColor: 'rgb(96,96,96)',
                    },
                ],
            },
            options: {
                legend: {
                    display: true,
                },
                scales: {
                    yAxes: [{
                        id: "A",
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            max: 50,
                            min: 0
                        },
                        display: false,
                    },
                        {
                        id: "1",
                        type: 'linear',
                        position: 'left',
                       ticks: {
                            max: 37.5,
                            min: 36,
                            stepSize: 0.1,
                            display: false,
                        },
                        }],
                }
            }
        });

    </script>
}
